services:
  synapse-init:
    image: ghcr.io/korjavin/matrix-self-hosted/synapse:${IMAGE_TAG:-latest}
    container_name: matrix-synapse-init
    environment:
      - MATRIX_DOMAIN=${MATRIX_DOMAIN:-matrix.example.com}
      - ELEMENT_DOMAIN=${ELEMENT_DOMAIN:-element.example.com}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme123}
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - REGISTRATION_SHARED_SECRET=${REGISTRATION_SHARED_SECRET:-}
      - TURN_SHARED_SECRET=${TURN_SHARED_SECRET:-}
    volumes:
      - synapse_data:/data
    networks:
      - matrix-network
    entrypoint: ["/opt/init-synapse.sh"]
    restart: "no"

  synapse:
    image: ghcr.io/korjavin/matrix-self-hosted/synapse:${IMAGE_TAG:-latest}
    container_name: matrix-synapse
    environment:
      - UID=991
      - GID=991
    volumes:
      - synapse_data:/data
    networks:
      - matrix-network
    command: ["run", "--config-path", "/data/homeserver.yaml"]
    depends_on:
      synapse-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      # Well-known endpoints for Matrix server discovery (highest priority)
      - "traefik.http.routers.matrix-wellknown.rule=Host(`${MATRIX_DOMAIN:-matrix.example.com}`) && PathPrefix(`/.well-known/`)"
      - "traefik.http.routers.matrix-wellknown.entrypoints=websecure"
      - "traefik.http.routers.matrix-wellknown.tls.certresolver=myresolver"
      - "traefik.http.routers.matrix-wellknown.priority=300"
      - "traefik.http.routers.matrix-wellknown.service=matrix-synapse"
      # Matrix federation on port 8448 (specific federation paths)
      - "traefik.http.routers.matrix-federation.rule=Host(`${MATRIX_DOMAIN:-matrix.example.com}`) && PathPrefix(`/_matrix/federation/`)"
      - "traefik.http.routers.matrix-federation.entrypoints=websecure"
      - "traefik.http.routers.matrix-federation.tls.certresolver=myresolver"
      - "traefik.http.routers.matrix-federation.priority=250"
      - "traefik.http.routers.matrix-federation.service=matrix-federation"
      - "traefik.http.services.matrix-federation.loadbalancer.server.port=8448"
      # Matrix client API (explicit client paths only)
      - "traefik.http.routers.matrix-client.rule=Host(`${MATRIX_DOMAIN:-matrix.example.com}`) && (PathPrefix(`/_matrix/client/`) || PathPrefix(`/_matrix/media/`) || PathPrefix(`/_matrix/static/`) || PathPrefix(`/_matrix/key/`))"
      - "traefik.http.routers.matrix-client.entrypoints=websecure"
      - "traefik.http.routers.matrix-client.tls.certresolver=myresolver"
      - "traefik.http.routers.matrix-client.priority=200"
      - "traefik.http.routers.matrix-client.service=matrix-synapse"
      # Admin and other Synapse APIs
      - "traefik.http.routers.matrix-admin.rule=Host(`${MATRIX_DOMAIN:-matrix.example.com}`) && PathPrefix(`/_synapse/`)"
      - "traefik.http.routers.matrix-admin.entrypoints=websecure"
      - "traefik.http.routers.matrix-admin.tls.certresolver=myresolver"
      - "traefik.http.routers.matrix-admin.priority=200"
      - "traefik.http.routers.matrix-admin.service=matrix-synapse"
      - "traefik.http.services.matrix-synapse.loadbalancer.server.port=7073"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fSs http://localhost:7073/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: matrix-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - matrix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-synapse} -d ${POSTGRES_DB:-synapse}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: matrix-redis
    volumes:
      - redis_data:/data
    networks:
      - matrix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  element:
    image: ghcr.io/korjavin/matrix-self-hosted/element:${IMAGE_TAG:-latest}
    container_name: matrix-element
    networks:
      - matrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matrix-element.rule=Host(`${ELEMENT_DOMAIN:-element.example.com}`)"
      - "traefik.http.routers.matrix-element.entrypoints=websecure"
      - "traefik.http.routers.matrix-element.tls.certresolver=myresolver"
      - "traefik.http.services.matrix-element.loadbalancer.server.port=8080"
    restart: unless-stopped
    depends_on:
      synapse:
        condition: service_healthy

  coturn:
    image: instrumentisto/coturn:latest
    container_name: matrix-coturn
    ports:
      - "3478:3478/tcp"
      - "3478:3478/udp" 
      - "49152-49172:49152-49172/udp"
    command:
      - turnserver
      - -v
      - --listening-ip=0.0.0.0
      - --external-ip=95.216.155.153
      - --realm=${MATRIX_DOMAIN:-matrix.example.com}
      - --min-port=49152
      - --max-port=49172
      - --use-auth-secret
      - --static-auth-secret=${TURN_SHARED_SECRET:-}
      - --no-tcp-relay
      - --no-multicast-peers
      - --no-cli
      - --no-tls
      - --no-dtls
    networks:
      - matrix-network
    restart: unless-stopped

  element-call:
    image: ghcr.io/element-hq/element-call:latest
    container_name: matrix-element-call
    environment:
      - REACT_APP_DEFAULT_HOMESERVER_URL=https://${MATRIX_DOMAIN:-matrix.example.com}
      - VITE_DEFAULT_HOMESERVER_URL=https://${MATRIX_DOMAIN:-matrix.example.com}
    command: >
      sh -c '
      mkdir -p /tmp/config
      cat > /tmp/config/config.json << EOF
      {
        "default_server_config": {
          "m.homeserver": {
            "base_url": "https://${MATRIX_DOMAIN:-matrix.example.com}",
            "server_name": "${MATRIX_DOMAIN:-matrix.example.com}"
          }
        },
        "features": {
          "feature_group_calls": true,
          "feature_knock": true
        }
      }
      EOF
      cd /app
      ln -sf /tmp/config/config.json .
      exec nginx -g "daemon off;"
      '
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.element-call.rule=Host(`call.${MATRIX_DOMAIN:-matrix.example.com}`)"
      - "traefik.http.routers.element-call.entrypoints=websecure"
      - "traefik.http.routers.element-call.tls.certresolver=myresolver"
      - "traefik.http.services.element-call.loadbalancer.server.port=8080"
    networks:
      - matrix-network
    restart: unless-stopped
    depends_on:
      synapse:
        condition: service_healthy

volumes:
  synapse_data:
    name: matrix_synapse_data
  postgres_data:
    name: matrix_postgres_data
  redis_data:
    name: matrix_redis_data
  coturn_data:
    name: matrix_coturn_data

networks:
  matrix-network:
    name: ${NETWORK_NAME:-matrix-network}
    external: ${NETWORK_EXTERNAL:-true}