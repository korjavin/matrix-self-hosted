services:
  synapse:
    image: matrixdotorg/synapse:latest
    container_name: matrix-synapse
    environment:
      - MATRIX_DOMAIN=${MATRIX_DOMAIN:-matrix.example.com}
      - ELEMENT_DOMAIN=${ELEMENT_DOMAIN:-element.example.com}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme123}
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - REGISTRATION_SHARED_SECRET=${REGISTRATION_SHARED_SECRET:-}
      - TURN_SHARED_SECRET=${TURN_SHARED_SECRET:-}
      - UID=991
      - GID=991
    volumes:
      - synapse_data:/data
      - ./homeserver.yaml:/opt/homeserver.yaml:ro
      - ./log.config:/opt/log.config:ro
      - ./init-config.sh:/opt/init-config.sh:ro
    networks:
      - matrix-network
    user: root
    command: >
      sh -c "
        chmod +x /opt/init-config.sh &&
        exec /opt/init-config.sh
      "
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matrix-synapse.rule=Host(`${MATRIX_DOMAIN:-matrix.example.com}`)"
      - "traefik.http.routers.matrix-synapse.entrypoints=websecure"
      - "traefik.http.routers.matrix-synapse.tls.certresolver=myresolver"
      - "traefik.http.services.matrix-synapse.loadbalancer.server.port=8008"
      # Matrix federation
      - "traefik.http.routers.matrix-federation.rule=Host(`${MATRIX_DOMAIN:-matrix.example.com}`) && Path(`/_matrix/`)"
      - "traefik.http.routers.matrix-federation.entrypoints=websecure"
      - "traefik.http.routers.matrix-federation.tls.certresolver=myresolver"
      - "traefik.http.routers.matrix-federation.service=matrix-federation"
      - "traefik.http.services.matrix-federation.loadbalancer.server.port=8448"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fSs http://localhost:8008/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: matrix-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - matrix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-synapse} -d ${POSTGRES_DB:-synapse}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: matrix-redis
    volumes:
      - redis_data:/data
    networks:
      - matrix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  element:
    image: vectorim/element-web:latest
    container_name: matrix-element
    volumes:
      - ./element-config.json:/app/config.json:ro
    networks:
      - matrix-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matrix-element.rule=Host(`${ELEMENT_DOMAIN:-element.example.com}`)"
      - "traefik.http.routers.matrix-element.entrypoints=websecure"
      - "traefik.http.routers.matrix-element.tls.certresolver=myresolver"
      - "traefik.http.services.matrix-element.loadbalancer.server.port=80"
    restart: unless-stopped
    depends_on:
      synapse:
        condition: service_healthy

volumes:
  synapse_data:
    name: matrix_synapse_data
  postgres_data:
    name: matrix_postgres_data
  redis_data:
    name: matrix_redis_data

networks:
  matrix-network:
    name: ${NETWORK_NAME:-matrix-network}
    external: ${NETWORK_EXTERNAL:-true}